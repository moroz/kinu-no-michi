// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: orders.sql

package queries

import (
	"context"

	"github.com/google/uuid"
	"github.com/moroz/kinu-no-michi/lib/encrypt"
)

const insertOrder = `-- name: InsertOrder :one
insert into orders (id, email_encrypted) values ($1, $2) returning id, email_encrypted, inserted_at, updated_at
`

type InsertOrderParams struct {
	ID             uuid.UUID
	EmailEncrypted encrypt.EncryptedBytes
}

func (q *Queries) InsertOrder(ctx context.Context, arg InsertOrderParams) (*Order, error) {
	row := q.db.QueryRow(ctx, insertOrder, arg.ID, arg.EmailEncrypted)
	var i Order
	err := row.Scan(
		&i.ID,
		&i.EmailEncrypted,
		&i.InsertedAt,
		&i.UpdatedAt,
	)
	return &i, err
}
